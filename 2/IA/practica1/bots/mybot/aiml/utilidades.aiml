<?xml version="1.0" encoding="UTF-8"?>
<aiml version="2.0">
<!-- File: utilidades.aiml -->
<!-- Author: Raul y Rocio -->
<!-- Last modified: February 17, 2016 -->
<!--  -->



<!-- Conjunto de reglas para devolver la primera palabra de una frase -->
<!-- Si la frase no contiene palabras devuelve "end" -->
<category>
 <pattern>TOP * *</pattern>
 <template><star index="1"/></template>
</category>

<category>
 <pattern>TOP *</pattern>
 <template><star index="1"/></template>
</category>

<category>
 <pattern>TOP</pattern>
 <template>end</template>
</category>




<!-- Conjunto de reglas para devolver el resto de palabras de una frase execto la primera -->
<!-- Si la frase no contiene palabras devuelve "end" -->
<category>
 <pattern>REMAIN * *</pattern>
 <template><star index="2"/></template>
</category>

<category>
 <pattern>REMAIN *</pattern>
 <template>end</template>
</category>

<category>
 <pattern>REMAIN</pattern>
 <template>end</template>
</category>




<!-- Regla que devuelve el numero de palabras que se pasan como argumento en <star/> -->

<category>
<pattern>COUNT</pattern>
<template>0</template>
</category>


<category>
    <pattern>
        COUNT *
    </pattern>
    <template>
        <think>
            <set var="count">0</set>
            <set var="list"><star/></set>
            <set var="item"><srai>TOP <get var="list"/></srai></set>
        </think>
        <condition var="item">
            <li><value>end</value><get var="count"/></li>
            <li>
              <think>
                  <set var="count"><map><name>successor</name><get var="count"/></map></set>
                  <set var="list"><srai>REMAIN <get var="list"/></srai></set>
                  <set var="item"><srai>TOP <get var="list"/></srai></set>
              </think>
              <loop/>
            </li>
        </condition>
    </template>
</category>




<!-- Regla que busca un elemento <star/> en <star index="2"/> si existe devuelve la posicion, sino devuelve 0 -->
<category>
    <pattern>
        FINDITEM * IN *
    </pattern>
    <template>
        <think>
            <set var="buscado"><star index="1"></star></set>
            <set var="lista"><star index="2"/></set>
            <set var="item"><srai>TOP <get var="lista"/></srai></set>
            <set var="count">1</set>
        </think>
        <condition var="item">
          <li value="end">0</li>
          <li><value><get var="buscado"/></value><get var="count"/></li>
          <li>
           <think><set var="count"><map><name>successor</name><get var="count"/></map></set></think>
           <think><set var="lista"><srai>REMAIN <get var="lista"/></srai></set></think>
           <think><set var="item"><srai>TOP <get var="lista"/></srai></set></think>
           <loop/>
          </li>
        </condition>
    </template>
</category>




<!-- Regla que selecciona la palabra de posicion number(<star/>) en <star index="2">
     Si la posicion es mayor al numero de palabras devuelve "end"                -->
<category>
    <pattern>
        SELECTITEM <set>number</set> IN *
    </pattern>
    <template>
        <think>
            <set var="count"><star/></set>
            <set var="list"><star index="2"/></set>
            <set var="item"><srai>TOP <get var="list"/></srai></set>
        </think>
        <condition var="count">
            <li value="0">unknown</li>
            <li><value>1</value><get var="item"/></li>
            <li>
              <think>
                  <set var="count"><map><name>predecessor</name><get var="count"/></map></set>
               <think><set var="list"><srai>REMAIN <get var="list"/></srai></set></think>
               <think><set var="item"><srai>TOP <get var="list"/></srai></set></think>
              </think>
              <loop/>
            </li>
        </condition>
    </template>
</category>



<!-- Regla que elimina la palabra de posicion number(<star/>) en <star index="2"> -->
<category>
    <pattern>
        REMOVEITEM <set>number</set> IN *
    </pattern>
    <template>
        <think>
            <set var="count"><star/></set>
            <set var="list"><star index="2"/></set>
            <set var="list_1"></set>
            <set var="item"><srai>TOP <get var="list"/></srai></set>
            <set var="list"><srai>REMAIN <get var="list"/></srai></set>
        </think>
        <condition var="count">
            <li><value>1</value> <get var="list_1"/> <get var="list"/></li>
            <li>
               <think>
                  <set var="count"><map><name>predecessor</name><get var="count"/></map></set>
                  <set var="list_1"><get var="list_1"/> <get var="item"/></set>
                  <set var="item"><srai>TOP <get var="list"/></srai></set>
                  <set var="list"><srai>REMAIN <get var="list"/></srai></set>
                  <condition var="list">
                      <li value="end"><set var="list"/></li>
                  </condition>
                  <condition var="item">
                      <li value="end"><set var="item"></set></li>
                  </condition>
                </think>
              <loop/>
            </li>
        </condition>
    </template>
</category>


<!-- Regla que aniade una palabra al principio de una frase si la palabra no estaba ya en la frase -->
<category>
    <pattern>
        ADDITEM * IN *
    </pattern>
    <template>
        <think><set var="set"><star index="2"/></set></think>
        <think><set var="pos"><srai>FINDITEM <star/> IN <get var="set"/></srai></set></think>
        <condition var="pos">
            <li value="0">
                <think><set var="set"><star/> <get var="set"/></set></think>
            </li>
        </condition>
        <get var="set"/>
    </template>
</category>



<!-- Regla que genera un numero aleatorio en el rango de 1 a number -->
<category>
    <pattern>
        RANDOM <set>number</set>
    </pattern>
    <template>
        <think>
            <set var="count"><star/></set>
            <set var="elegido">1</set>
        </think>
        <condition var="count">
            <li><value>1</value> <get var="elegido"/></li>
            <li>
                <think>
                <random>
                    <li>
                        <set var="count"><map><name>predecessor</name><get var="count"/></map></set>
                        <set var="elegido"><map><name>successor</name><get var="elegido"/></map></set>
                    </li>
                    <li>
                        <set var="count"><map><name>predecessor</name><get var="count"/></map></set>
                    </li>
                    <li>
                        <set var="count"><map><name>predecessor</name><get var="count"/></map></set>
                    </li>
                </random>
                </think>
                <loop/>
            </li>
        </condition>
    </template>
</category>



<!-- Regla que permite iterar sobre las distintas palabras de una frase (esta asociado con NEXT)-->
<category>
<pattern>ITERATE *</pattern>
<template>
	<think><set name="iterator"><star/></set></think>
	<srai>NEXT</srai>
</template>
</category>


<!-- Regla que permite iterar sobre las distintas palabras de una frase (esta asociado con ITERATE)-->
<category>
<pattern>NEXT</pattern>
<template>
	<condition name="iterator">
	    <li value="end">end</li>
		<li>
           <srai>TOP <get name="iterator"/></srai>
           <think>
               <set name="iterator"><srai>REMAIN <get name="iterator"/></srai></set>
           </think>
		</li>
	</condition>
</template>
</category>


<!-- Regla que permite comparar dos cadenas, si son iguales devuelve YES en otro caso devuelve NO-->
<category>
    <pattern>
        COMPARE * WITH *
    </pattern>
    <template>
        <think><set var="local"><uppercase><star index="2"/></uppercase></set></think>
        <condition var="local">
            <li><value><uppercase><star/></uppercase></value>YES</li>
            <li>NO</li>
        </condition>
    </template>
</category>


</aiml>
