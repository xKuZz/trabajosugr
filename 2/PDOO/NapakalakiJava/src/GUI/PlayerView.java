package GUI;

import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JPanel;
import napakalakiGame.Napakalaki;
import napakalakiGame.Player;
import napakalakiGame.Treasure;

/**
 *
 * @author xkuzz
 */
public class PlayerView extends javax.swing.JPanel {
  private Player playerModel;
  private Napakalaki napakalakiModel;
  private NapakalakiView napView;
  /**
   * Creates new form PlayerView
   */
  public PlayerView() {
    initComponents();
    visibleTreasures.setVisible(true);
    hiddenTreasures.setVisible(true);
  }
  
  public void setNapView(NapakalakiView napv){
    napView = napv;
  }
  public void fillTreasurePanel(JPanel aPanel, ArrayList<Treasure> aList) {
    aPanel.removeAll();
    for (Treasure t : aList){
      TreasureView aTreasureView = new TreasureView();
      aTreasureView.setTreasure(t);
      aTreasureView.setVisible(true);
      aPanel.add (aTreasureView);
      aPanel.repaint();
      aPanel.revalidate();
    }  
  }
  
  public void setNapakalaki(Napakalaki nap) {
    napakalakiModel = nap;
  }
  
  public void letEquip(boolean permitir) {
    makeVisibleButton.setEnabled(permitir);
  }
  public void letDiscards(boolean permitir) {
    discardTreasuresButton.setEnabled(permitir);
    discardAllTreasures.setEnabled(permitir);
    
  }
  public void setPlayer(Player p) {
    playerModel = p;
    playerstring.setText(p.toString());
    badConsequenceView.setBadConsequence(p.getPendingBadConsequence());
    fillTreasurePanel(visibleTreasures, playerModel.getVisibleTreasures());
    fillTreasurePanel( hiddenTreasures, playerModel.getHiddenTreasures());
    stealTreasureButton.setEnabled(p.canISteal() && p.getEnemy().canYouGiveMeATreasure());
    repaint();
    revalidate();
  }

  private ArrayList<Treasure> getSelectedTreasures(JPanel aPanel) {
    // Se recorren los tesoros que contiene el panel,
    // almacenando en un vector aquellos que est√°n seleccionados.
    // Finalmente se devuelve dicho vector.
    TreasureView tv;
    ArrayList<Treasure> output = new ArrayList();
    for (Component c : aPanel.getComponents()) {
      tv = (TreasureView) c;
      if (tv.isSelected())
      output.add(tv.getTreasure());
    }
    return output;
}
  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        playerstring = new javax.swing.JLabel();
        visibleTreasures = new javax.swing.JPanel();
        hiddenTreasures = new javax.swing.JPanel();
        stealTreasureButton = new javax.swing.JButton();
        makeVisibleButton = new javax.swing.JButton();
        discardTreasuresButton = new javax.swing.JButton();
        discardAllTreasures = new javax.swing.JButton();
        badConsequenceView = new GUI.BadConsequenceView();

        visibleTreasures.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        hiddenTreasures.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        stealTreasureButton.setText("Steal Treasure");
        stealTreasureButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stealTreasureButtonActionPerformed(evt);
            }
        });

        makeVisibleButton.setText("Make Visible");
        makeVisibleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                makeVisibleButtonActionPerformed(evt);
            }
        });

        discardTreasuresButton.setText("Discard Treasures");
        discardTreasuresButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardTreasuresButtonActionPerformed(evt);
            }
        });

        discardAllTreasures.setText("Discard All Treasures");
        discardAllTreasures.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardAllTreasuresActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(hiddenTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(stealTreasureButton)
                    .addComponent(makeVisibleButton)
                    .addComponent(discardTreasuresButton)
                    .addComponent(discardAllTreasures)))
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(visibleTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 570, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerstring, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(badConsequenceView, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(playerstring, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(badConsequenceView, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(visibleTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hiddenTreasures, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(stealTreasureButton)
                        .addGap(13, 13, 13)
                        .addComponent(makeVisibleButton)
                        .addGap(13, 13, 13)
                        .addComponent(discardTreasuresButton)
                        .addGap(13, 13, 13)
                        .addComponent(discardAllTreasures))))
        );
    }// </editor-fold>//GEN-END:initComponents

  private void makeVisibleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeVisibleButtonActionPerformed
    ArrayList<Treasure> selHidden = getSelectedTreasures(hiddenTreasures);
    napakalakiModel.makeTreasuresVisible(selHidden);
    setPlayer(napakalakiModel.getCurrentPlayer());
  }//GEN-LAST:event_makeVisibleButtonActionPerformed

  private void discardTreasuresButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardTreasuresButtonActionPerformed
    ArrayList<Treasure> selVisible = getSelectedTreasures(visibleTreasures);
    ArrayList<Treasure> selHidden =  getSelectedTreasures(hiddenTreasures);
      napakalakiModel.discardVisibleTreasures(selVisible);
      napakalakiModel.discardHiddenTreasures(selHidden);
    setPlayer(napakalakiModel.getCurrentPlayer());
    if((napakalakiModel.getCurrentPlayer().getPendingBadConsequence() == null ||
       napakalakiModel.getCurrentPlayer().getPendingBadConsequence().isEmpty()) &&
       napakalakiModel.getCurrentPlayer().getHiddenTreasures().size() <= 4)
    napView.letNextTurn(true);
    
        
  }//GEN-LAST:event_discardTreasuresButtonActionPerformed

  private void discardAllTreasuresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardAllTreasuresActionPerformed
    napakalakiModel.discardVisibleTreasures(napakalakiModel.getCurrentPlayer().getVisibleTreasures());
    napakalakiModel.discardHiddenTreasures(napakalakiModel.getCurrentPlayer().getHiddenTreasures());
    setPlayer(napakalakiModel.getCurrentPlayer());
    napView.letNextTurn(true);
  }//GEN-LAST:event_discardAllTreasuresActionPerformed

  private void stealTreasureButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stealTreasureButtonActionPerformed
    napakalakiModel.getCurrentPlayer().stealTreasure();
    setPlayer(napakalakiModel.getCurrentPlayer());
  }//GEN-LAST:event_stealTreasureButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private GUI.BadConsequenceView badConsequenceView;
    private javax.swing.JButton discardAllTreasures;
    private javax.swing.JButton discardTreasuresButton;
    private javax.swing.JPanel hiddenTreasures;
    private javax.swing.JButton makeVisibleButton;
    private javax.swing.JLabel playerstring;
    private javax.swing.JButton stealTreasureButton;
    private javax.swing.JPanel visibleTreasures;
    // End of variables declaration//GEN-END:variables
}
