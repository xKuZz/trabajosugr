principal {

    declaracion
        enteÂ·ro ve;
        entero ve1,ve2;
        real vf;
        caracter vc;
        booleano v1;
        lista de entero pe, pe2;
        lista de real pf, pf2;
        lista de caracter pc, pc2;
        lista de booleano pl;
    findeclaracion

    entero funcionA (entero a1, real a2, caracter a3) {
        declaracion
            real x1, x2,a2;
        findeclaracion

        caracter funcionB (caracter b1, booleano b2) {
            declaracion
                real xf, x2;
            findeclaracion
            real funcionC (booleano c1, entero c2) {
                declaracion
                    real x1;
                findeclaracion
                ve1 = funcionA(2+1,2.6,'a');
                vf = funcionC(2,,3,1);

                x1 = 1.3;
                si ((c2 > 10)+2)
                    c2 = c2-1;
                sino
                    x1 = 3.1;
                devolver x1;
            }
            xf = funcionC(V, 10);
            x2 = xf*(funcionC(F,1)-funcionC(V,23))/10.0;

            mientras (x2*funcionC(F,1)-xf < 10.0)
                x2 = x2*xf;
        }

        real funcionD (real d1) {
            declaracion
                caracter dato;
                entero valor;
            findeclaracion

            caracter funcionE(caracter e1, caracter e2) {
                escribir "introduzca dos caracteres: ";
                leer e1, e2;
                si (e1 == 'a')
                    devolver e1;
                sino si (e1 == 'b')
                    devolver e2;
                sino
                    devolver ' ';
            }

            escribir "introduzca un valor entero: ";
            leer valor; 

            si (d1 > 0.0) {
                declaracion
                    entero dato;
                findeclaracion
                dato = 2;
                dato = valor *20/dato;
            }
            sino {
                valor = valor*100;
                d1 = d1/1000.0;
            }
            devolver d1;
        }
        
        pe = pe++10@#pe*vf; // Insertar 10 en la lista (al final)
        pf = pf++10.0@#pf; // Insertar 10.0 en la lista
        pc = pc++'#'@#pc; // Insertar # en la lsita

        si (?(pe++20@0) == 20) // Inserto 20 al principio y el principio es 20
            ve = pe@#pe; // Elemento al final de la lista
        sino {
            pe = pe * 42; 
            pe = pe2 - 4;
            pe = pe%3 ** pe; // Borramos la lista a partir de 3 y la concatenamos con la original
        }
        devolver a1;
    }

        escribir "Fin del programa";
}